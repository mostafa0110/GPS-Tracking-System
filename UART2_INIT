void uart2init()
{
	SYSCTL_RCGCUART_R |= 0X04;                  //UART2
	while(GET_BIT(SYSCTL_PRUART_R,2)==0);
	SYSCTL_RCGCGPIO_R |= 0x08;              //PORTD
	while(GET_BIT(SYSCTL_PRGPIO_R,3)==0);
	
	UART2_CTL_R &= ~UART_CTL_UARTEN;  //DISABLE
	
	UART2_IBRD_R=520;
	UART2_FBRD_R=53;
	
	UART2_LCRH_R |= (UART_LCRH_WLEN_8 | UART_LCRH_FEN);    //8-BIT WIDTH,FIFO ENABLE
	
	UART2_CTL_R |= (UART_CTL_UARTEN | UART_CTL_RXE | UART_CTL_TXE );   //ENABLE UART AND TXE AND RXE
	
	GPIO_PORTD_AFSEL_R |= 0xC0;     //ALTERNATE FUNCTION
	
	GPIO_PORTD_PCTL_R &= ~0XFF000000; //CLEAR PD7-6
	GPIO_PORTD_PCTL_R |= GPIO_PCTL_PD6_U2RX;  //PD6-->RX
	GPIO_PORTD_PCTL_R |= GPIO_PCTL_PD7_U2TX;  //PD7-->TX
	GPIO_PORTD_DEN_R |= 0XC0;

}

 
 char UART_IsCharAvail (){
	 return ((UART2_FR_R & UART_FR_RXFE )==UART_FR_RXFE)?0:1 ;
	 
 }
 char UART_GetChar (){
  while ((UART_IsCharAvail ())!=1);
	 return (char) (UART2_DR_R)& 0xFF;
 }
